#!/usr/bin/env python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# (c) 2013 Heinlein Support GmbH
#          Robert Sander <r.sander@heinlein-support.de>

# This is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  This file is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

factory_settings["entropy_avail_default_levels"] = {
    "percentage" : ( 0.0, 0.0 ),
    "absolute" : (200, 100),
}

def inventory_entropy_avail(info):
    inventory = []
    if len(info) > 0:
        inventory.append( ( None, {} ) )
    return inventory

def check_entropy_avail(item, params, info):
    entropy_info = {}
    for line in info:
        entropy_info[line[0]] = saveint(line[1])

    if 'entropy_avail' in entropy_info and 'poolsize' in entropy_info:
        warn_perc = 0
        crit_perc = 0
        warn_abs  = 0
        crit_abs  = 0

        if isinstance(params, dict):
            if 'percentage' in params:
                warn_perc = entropy_info['poolsize'] / 100 * params['percentage'][0]
                crit_perc = entropy_info['poolsize'] / 100 * params['percentage'][1]
            if 'absolute' in params:
                warn_abs  = params['absolute'][0]
                crit_abs  = params['absolute'][1]
        warn = warn_perc if warn_perc > warn_abs else warn_abs
        crit = crit_perc if crit_perc > crit_abs else crit_abs

        info_text = "%d Bits entropy available. Pool size: %d Bits" % (entropy_info['entropy_avail'],
                                                                       entropy_info['poolsize'])
        perf_data = [ ( "entropy",
                        "%db" % entropy_info['entropy_avail'], warn, crit, 0, entropy_info['poolsize'] ) ]
        
        if entropy_info['entropy_avail'] < crit:
            return (2, info_text, perf_data)
        if entropy_info['entropy_avail'] < warn:
            return (1, info_text, perf_data)
        return (0, info_text, perf_data)
    return (3, "No Entropy Information found")

check_info['entropy_avail'] = {
    'check_function':      check_entropy_avail,
    'service_description': "Entropy Available",
    'has_perfdata':        True,
    'inventory_function':  inventory_entropy_avail,
    'group':               'entropy_avail',
    'default_levels_variable'  : "entropy_avail_default_levels",
}
