#!/usr/bin/env python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# (c) 2017 Heinlein Support GmbH
#          Robert Sander <r.sander@heinlein-support.de>

#
# This is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

from cmk.base.check_legacy_includes.temperature import check_temperature

def item_dell_sc_ctlrtemp(line):
    ctlr, temp = line[0].split('.')
    return "Ctlr %s Temp %s" % (ctlr, temp)

def inventory_dell_sc_ctlrtemp(info):
    for line in info:
        yield item_dell_sc_ctlrtemp(line), None

def check_dell_sc_ctlrtemp(item, params, info):
    state = {
        1  : ('up', 0),
        2  : ('down', 2),
        3  : ('degraded', 1),
        }
    for line in info:
        if item_dell_sc_ctlrtemp(line) == item:
            ctlrtemp_state = state.get(saveint(line[1]), ('unknown', 3))
            temp_state, temp_text, perfdata = check_temperature(saveint(line[3]),
                                                                params,
                                                                'dell_sc_ctlrtemp_%s' % item,
                                                                dev_status = ctlrtemp_state[1],
                                                                dev_status_name = 'State is %s' % ctlrtemp_state[0])
            info_text = "%s, Temperature is %s" % (
                line[2],
                temp_text,
            )
            return temp_state, info_text, perfdata

check_info["dell_sc_ctlrtemp"] = {
    'check_function'        : check_dell_sc_ctlrtemp,
    'inventory_function'    : inventory_dell_sc_ctlrtemp,
    'service_description'   : 'Dell SC %s',
    'has_perfdata'          : True,
    'snmp_info'             : ('.1.3.6.1.4.1.674.11000.2000.500.1.2.19.1', [
        OID_END,    # ctlr + temp
        '3',    # scCtlrTempStatus
        '4',    # scCtlrTempName
        '5',    # scCtlrTempCurrentC
        ] ),
    'snmp_scan_function'    : lambda oid: 'compellent' in oid('.1.3.6.1.2.1.1.1.0').lower() and oid(".1.3.6.1.4.1.674.11000.2000.500.1.2.1.0"),
    'group'                 : 'temperature',
}
