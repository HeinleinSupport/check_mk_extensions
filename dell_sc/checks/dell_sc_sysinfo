#!/usr/bin/env python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# (c) 2017 Heinlein Support GmbH
#          Robert Sander <r.sander@heinlein-support.de>

#
# This is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def inventory_dell_sc_sysinfo(info):
    return [ ( None, None ) ]

def check_dell_sc_sysinfo(_no_item, params, info):
    state = {
        1  : ('Other', 3),
        2  : ('Unknown', 3),
        3  : ('OK', 0),
        4  : ('non Critical', 1),
        5  : ('Critical', 2),
        6  : ('non Recoverable', 2),
        }
    globalState = state.get(saveint(info[0][2]), ('Unknown', 3))
    info_text = "Version %s, ServiceTag %s, Build %s, State %s" % (info[0][0],
                                                                   info[0][1],
                                                                   info[0][3],
                                                                   globalState[0]
    )
    return globalState[1], info_text

check_info["dell_sc_sysinfo"] = {
    'check_function'        : check_dell_sc_sysinfo,
    'inventory_function'    : inventory_dell_sc_sysinfo,
    'service_description'   : 'Dell SC SysInfo',
    'has_perfdata'          : False,
    'snmp_info'             : ('.1.3.6.1.4.1.674.11000.2000.500.1.2', [
        '4.0',    # productIDVersion
        '5.0',    # productIDSerialNumber
        '6.0',    # productIDGlobalStatus
        '7.0',    # productIDBuildNumber
        ] ),
    'snmp_scan_function'    : lambda oid: 'compellent' in oid('.1.3.6.1.2.1.1.1.0').lower() and oid(".1.3.6.1.4.1.674.11000.2000.500.1.2.1.0"),
}

