#!/usr/bin/env python3
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

def carel_sensors_digital_parse(info):

    oidtothing = [["General",
                   # "Hot Gas Coil",
                   # "General",
                   ],]

    parsed = {}

    parsed["alarm"] = {}
    for index, value in enumerate(info[0][0]):
        parsed["alarm"]['Alarm %s' % oidtothing[0][index]] = saveint(value)

    return parsed


def inventory_carel_sensors_digital(parsed):
    for quantity in parsed.keys():
        for thing in parsed[quantity].keys():
            yield thing, {}

def check_carel_sensors_digital(item, params, parsed):
    if item in parsed["alarm"]:
        if not parsed["alarm"][item]:
            return 2, "Alarm on"
        else:
            return 0, "Alarm off"

check_info["carel_sensors_digital"] = {
    "parse_function"             : carel_sensors_digital_parse,
    "inventory_function"         : inventory_carel_sensors_digital,
    "check_function"             : check_carel_sensors_digital,
    "service_description"        : "Sensor %s",
    "has_perfdata"               : False,
    "snmp_info"                  : [ ( ".1.3.6.1.4.1.9839.2.1.1", [
                                                                  "23.0", # alarmRoomHH
                                                                  # "9.0",  # hotGasCoil
                                                                  # "66.0", # alarmGeneral
                                                                ] ) ],
    "snmp_scan_function"         : lambda oid: ( "pCO" in oid(".1.3.6.1.2.1.1.1.0") or \
                                                 "LCP" in oid(".1.3.6.1.2.1.1.1.0") or \
                                                 oid(".1.3.6.1.2.1.1.1.0").endswith("armv4l")
                                               ) and \
                                               oid(".1.3.6.1.4.1.9839.1.1.0") ,
}
