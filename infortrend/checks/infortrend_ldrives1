#!/usr/bin/env python3
# -*- encoding: utf-8; py-indent-offset: 4 -*-

#
# (c) 2013 Heinlein Support GmbH
#          Robert Sander <r.sander@heinlein-support.de>
#

# This is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  This file is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

def inventory_infortrend_ldrives1(info):
    inventory = []
    for id, status in info:
        inventory.append( (id, int(status)) )
    return inventory

def check_infortrend_ldrives1(item, params, info):
    status_info = { 
        0   : "Good",
        1   : "Rebuilding",
        2   : "Initializing",
        3   : "Degraded",
        4   : "Dead",
        5   : "Invalid",
        6   : "Incomplete",
        7   : "Drive Missing",
	64  : "Good"
        }
    for slot, status in info:
        status = int(status)
        if slot == item:
            output = []
            if status & 128 == 128:
                output.append("Logical Drive Off-line (RW)")
                status = status & 127
                rc = 3
            if status not in status_info.keys():
                return (3, "Status is %d" % status)
            output.append(status_info[status])
            if status == 0 or status == 64:
                rc = 0
            if status == 1 or status == 2:
                rc = 1
            if status == 2 or status == 3 or status == 4 or status == 5 or status == 6 or status == 7:
                rc = 2
            return (rc, ", ".join(output))
    return (3, "not yet implemented")

check_info["infortrend_ldrives1"] = {
    'check_function'        : check_infortrend_ldrives1,
    'inventory_function'    : inventory_infortrend_ldrives1,
    'service_description'   : 'IFT Logical Drive %s',
    'has_perfdata'          : False,
    'snmp_info'             : ( ".1.3.6.1.4.1.1714.1.1.2.1", [ "2", "6" ] ),
    'snmp_scan_function'    : lambda oid: "infortrend" in oid(".1.3.6.1.2.1.1.1.0").lower() and oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.1714.1.1"),
}
