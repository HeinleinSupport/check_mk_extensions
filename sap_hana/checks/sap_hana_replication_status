#!/usr/bin/env python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# (c) Gerd Stolz <Gerd.Stolz@sva.de>
# (c) Robert Sander <r.sander@heinlein-support.de>

# This is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Example output from agent:
#<<<sap_hana_replication_status>>>
#[[SID INSTANCE]]
#| Host     | Port  | Service Name | Volume ID | Site ID | Site Name  | Secondary | Secondary | Secondary | Secondary    | Secondary     | Replication | Replication | Replication                         |
#|          |       |              |           |         |            | Host      | Port      | Site ID   | Site Name    | Active Status | Mode        | Status      | Status Details                      |
#| -------- | ----- | ------------ | --------- | ------- | ---------- | --------- | --------- | --------- | ------------ | ------------- | ----------- | ----------- | ----------------------------------- |
#| sdeu0491 | 30007 | xsengine     |         2 |       1 | P08primary | sdeu0410  |     30007 |         2 | P08secondary | YES           | ASYNC       | ACTIVE      |                                     |
#| sdeu0491 | 30001 | nameserver   |         1 |       1 | P08primary | sdeu0410  |     30001 |         2 | P08secondary | YES           | ASYNC       | ACTIVE      |                                     |
#| sdeu0491 | 30003 | indexserver  |         3 |       1 | P08primary | sdeu0410  |     30003 |         2 | P08secondary | YES           | ASYNC       | ACTIVE      |                                     |
#| sdeu0493 | 30003 | indexserver  |         7 |       1 | P08primary | sdeu0413  |     30003 |         2 | P08secondary | YES           | ASYNC       | ACTIVE      |                                     |
#| sdeu0495 | 30003 | indexserver  |         9 |       1 | P08primary | sdeu0414  |     30003 |         2 | P08secondary | YES           | ASYNC       | ACTIVE      |                                     |
#| sdeu0496 | 30003 | indexserver  |        11 |       1 | P08primary | sdeu0416  |     30003 |         2 | P08secondary | YES           | ASYNC       | ACTIVE      |                                     |
#| sdeu0494 | 30003 | indexserver  |         0 |       1 | P08primary | sdeu0412  |     30003 |         2 | P08secondary | YES           | STANDBY     | ACTIVE      |                                     |
#| sdeu0497 | 30003 | indexserver  |         5 |       1 | P08primary | sdeu0417  |     30003 |         2 | P08secondary | YES           | ASYNC       | ACTIVE      | Delta Replica: 51 % (7200/13888 MB) |
#| sdeu0492 | 30003 | indexserver  |         6 |       1 | P08primary | sdeu0411  |     30003 |         2 | P08secondary | YES           | ASYNC       | ACTIVE      |                                     |
#
#status system replication site "2": ACTIVE
#overall system replication status: ACTIVE
#
#Local System Replication State
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#mode: PRIMARY
#site id: 1
#site name: P08primary
#Returncode: 15

def inventory_sap_hana_replication_status(parsed):
    returncode=0
    mode="undefined"
    for instance,lines in parsed.items():
        returncode = 0
        mode = ''
        for line in lines:
            if line[0] == "mode:":
                mode = line[1]
            if line[0] == "Returncode:":
                returncode = saveint(line[1]) # everything after "Returncode:" 
        if returncode != 10 and mode == "PRIMARY":
            yield instance, {}
            
returncodeMap = {
    0: { "desc" : "The script /usr/sap/â€¦/exe/python_support/systemReplicationStatus.py returned an unknown returncode - this check only handles 10-15!", "nagiosRC" : 3 }, 
    10: { "desc" : "No System Replication - This must have changed, because this check doesn't inventory systems where replication is disabled!", "nagiosRC" : 2 }, # this shouldn't occur, we shouldn't even monitor this
    11: { "desc" : "Error", "nagiosRC" : 2},
    12: { "desc" : "Unknown", "nagiosRC" : 2},
    13: { "desc" : "Initializing", "nagiosRC" : 1},
    14: { "desc" : "Syncing", "nagiosRC" : 0},
    15: { "desc" : "Active", "nagiosRC" :  0},
}

def check_sap_hana_replication_status(item, params, parsed):
    for instance,lines in parsed.items():
        returncode = 0
        if item == instance:
            for line in lines:
                if line[0] == "Returncode:": 
                    returncode = saveint(line[1]) # everything after "Returncode:"
            yield returncodeMap[returncode]["nagiosRC"], "Replication Status is: %s" % returncodeMap[returncode]["desc"]

check_info["sap_hana_replication_status"] = {
    "parse_function"        : parse_sap_hana,
    "check_function"        : check_sap_hana_replication_status,
    "inventory_function"    : inventory_sap_hana_replication_status,
    "service_description"   : "SAP HANA Replication Status %s",
    "has_perfdata"          : False,
    "includes"              : [ 'sap_hana.include' ],
}

