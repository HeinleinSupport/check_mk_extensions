#!/usr/bin/env python3
# -*- encoding: utf-8; py-indent-offset: 4 -*-

def inventory_dell_omsa_vdisk(info):
    inventory = []
    for line in info:
        inventory.append(( line[1], None ))
    return inventory

def check_dell_omsa_vdisk(item, params, info):
    vdisk_state = {
        0  : 'Unknown',
        1  : 'Ready',
        2  : 'Failed',
        3  : 'Online',
        4  : 'Offline',
        6  : 'Degraded',
        15 : 'Resynching',
        16 : 'Regenerating',
        24 : 'Rebuilding',
        26 : 'Formatting',
        32 : 'Reconstructing',
        35 : 'Initializing',
        36 : 'Background Initialization',
        38 : 'Resynching Paused',
        52 : 'Permanently Degraded',
        54 : 'Degraded Redundancy',
        }
    vdisk_layout = {
        1  : 'Concatenated',
        2  : 'RAID-0',
        3  : 'RAID-1',
        4  : 'UNSUPPORTED:raid-2',
        5  : 'UNSUPPORTED:raid-3',
        6  : 'UNSUPPORTED:raid-4',
        7  : 'RAID-5',
        8  : 'RAID-6',
        9  : 'UNSUPPORTED:raid-7',
        10 : 'RAID-10',
        11 : 'UNSUPPORTED:raid-30',
        12 : 'RAID-50',
        13 : 'UNSUPPORTED:addSpares',
        14 : 'UNSUPPORTED:deleteLogical',
        15 : 'UNSUPPORTED:transformLogical',
        18 : 'UNSUPPORTED:raid-0-plus-1',
        19 : 'Concatenated RAID-1',
        20 : 'UNSUPPORTED:concatRaid-5',
        21 : 'UNSUPPORTED:noRaid',
        22 : 'UNSUPPORTED:volume',
        23 : 'UNSUPPORTED:raidMorph',
        24 : 'RAID-60',
        25 : 'CacheCade',
        }
    for line in info:
        if line[1] != item:
            continue
        state = int(line[3])
        try:
            info_text = "%s %s %s" % (line[2], vdisk_layout[int(line[4])], vdisk_state[state])
        except KeyError:
            info_text = "%d %d" % (state, cstate)
        if state in [1, 3]:
            return (0, info_text)
        if state in [15, 16, 24, 26, 32, 35, 36]:
            return (1, info_text)
        if state in [0]:
            return (3, info_text)
        return (2, info_text)
    return (3, "vDisk %s not found" % item)

check_info["dell_omsa_vdisk"] = {
    'check_function'        : check_dell_omsa_vdisk,
    'inventory_function'    : inventory_dell_omsa_vdisk,
    'service_description'   : 'OMSA %s',
    'has_perfdata'          : False,
    'snmp_info'             : ('.1.3.6.1.4.1.674.10893.1.20.140.1.1', ['1',  # Index
                                                                       '2',  # Name
                                                                       '3',  # virtualDiskDeviceName
                                                                       '4',  # virtualDiskState
                                                                       '13', # virtualDiskLayout
                                                                       ] ),
    'snmp_scan_function'    : lambda oid: oid(".1.3.6.1.4.1.674.10893.1.20.140.1.1.1.1"),
}

