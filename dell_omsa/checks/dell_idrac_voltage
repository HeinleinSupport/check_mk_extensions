#!/usr/bin/env python3
# -*- encoding: utf-8; py-indent-offset: 4 -*-

def dell_voltage_name(input):
    return '%02d' % saveint(input[0])

def inventory_dell_idrac_voltage(info):
    inventory = []
    for line in info:
        inventory.append(( dell_voltage_name(line), None ))
    return inventory

def check_dell_idrac_voltage(item, params, info):
    voltage_state = {
        1 : 'Other',
        2 : 'Unknown',
        3 : 'OK',
        4 : 'NonCritical',
        5 : 'Critical',
        6 : 'NonRecoverable',
        }
    voltage_type = {
        1  : 'Other',
        2  : 'Unknown',
        3  : '1.5 volt probe',
        4  : '3.3 volt probe',
        5  : '5 volt probe',
        6  : '-5 volt probe',
        7  : '12 volt probe',
        8  : '-12 volt probe',
        9  : 'I/O probe',
        10 : 'Core probe',
        11 : 'FLEA (standby) probe',
        12 : 'Battery probe',
        13 : 'SCSI Termination probe',
        14 : '2.5 volt probe',
        15 : 'GTL (ground termination logic) probe',
        16 : 'Voltage probe with discrete reading',
        17 : 'Generic discrete readin',
        18 : 'Power Supply voltage probe',
        19 : 'Memory Status probe',
        }
    voltage_discrete = {
        0 : 'Unknown',
        1 : 'Good',
        2 : 'Bad',
        }
    for line in info:
        if dell_voltage_name(line) != item:
            continue
        state = saveint(line[1])
        type = saveint(line[2])
        discretereading = saveint(line[3])
        probereading = saveint(line[4])
        try:
            info_text = "%s (%s): State %s" % (line[5],
                                               voltage_type[type],
                                               voltage_state[state],
                                               )
        except KeyError:
            info_text = "%s %s %d" % (line[5], line[2], line[1])
        perfdata = []
        if type == 16:
            info_text += ", %s" % voltage_discrete[discretereading]
        else:
            info_text += " %dV" % (probereading / 1000.0)
            perfdata = [ ( "V",
                           probereading / 1000.0,
                           ),
                         ]
        if state in [3]:
            return (0, info_text, perfdata)
        if state in [1, 4]:
            return (1, info_text, perfdata)
        if state in [5, 6]:
            return (2, info_text, perfdata)
        return (3, info_text, perfdata)
    return (3, "Voltage %s not found" % item, [])

check_info["dell_idrac_voltage"] = {
    'check_function'        : check_dell_idrac_voltage,
    'inventory_function'    : inventory_dell_idrac_voltage,
    'service_description'   : 'iDRAC Voltage %s',
    'has_perfdata'          : True,
    'snmp_info'             : ('.1.3.6.1.4.1.674.10892.5.4.600.20.1', ['2',  # voltageProbeIndex
                                                                       '5',  # voltageProbeStatus
                                                                       '7',  # voltageProbeType
                                                                       '16', # voltageProbeDiscreteReading
                                                                       '6',  # voltageProbeReading
                                                                       '8',  # voltageProbeLocationName
                                                                     ] ),
    'snmp_scan_function'    : lambda oid: oid(".1.3.6.1.4.1.674.10892.5.4.600.20.1.1.1.1"),
}

