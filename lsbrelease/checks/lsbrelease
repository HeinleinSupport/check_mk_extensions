#!/usr/bin/env python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# (c) 2013 Heinlein Support GmbH
#          Robert Sander <r.sander@heinlein-support.de>

# This is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  This file is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

lsbrelease_default_values = [ ( 'Debian', '6.0.7' ),
                              ( 'openSUSE', '12.2'),
                              ( 'SUSE OEL', '99' ),
                              ( 'SUSE Linux Enterprise Server', '11.3' ),
                            ]

def versiontuple(v):
    return tuple(map(saveint, [item for sublist in map(lambda x: x.split('-'), v.split('.')) for item in sublist]))

def inventory_lsbrelease(info):
    inventory = []
    if len(info) > 0:
        inventory.append( ( None, [] ) )
    return inventory

def check_lsbrelease(item, params, info):
    lsbinfo = {}
    for line in info:
        key, value = (" ".join(line)).split(': ')
        lsbinfo[key] = value
    infotext = lsbinfo['Description']
    for distribution, version in params:
        if lsbinfo['Description'].lower().startswith(distribution.lower()):
            if distribution.lower().startswith('ubuntu'):
                current_version = versiontuple(lsbinfo['Description'].split()[1])
            else:
                current_version = versiontuple(lsbinfo['Release'])
                if lsbinfo['Release'] not in infotext:
                    infotext += ", Release " + lsbinfo['Release']
            test_version = versiontuple(version)
            if current_version[0] < test_version[0]:
                return (2, infotext + ", expected at least version %d" % test_version[0])
            if current_version < test_version:
                return (1, infotext + ", expected version %s" % version)
            return (0, infotext)
    return (3, "Unknown Distribution: %s" % infotext)

check_info['lsbrelease'] = {
    'check_function':      check_lsbrelease,
    'service_description': "Distribution Release",
    'has_perfdata':        False,
    'inventory_function':  inventory_lsbrelease,
    'group':               'lsbrelease',
}

check_default_levels['lsbrelease'] = 'lsbrelease_default_values'

factory_settings['lsbrelease_default_values'] = lsbrelease_default_values
